@Entity – use to mark any class as Entity.
@Table – use to change the table details.
@Id- use to mark column as id(primary key).
@GeneratedValue- hibernate will automatically generate values for that using an internal sequence. Therefore we don’t have to set it manually.
@Column-Can be used to specify column mappings. For example, to change the column name in the associated table in database.
 @Transient-This tells hibernate not to save this field.
@Temporal- @Temporal over a date field tells hibernate the format in which the date needs to be saved
@Lob-@Lob tells hibernate that this is a large object, not a simple object.
@OneToOne ,  @OneToMany ,  @ManyToOne, @JoinColumn 







@Entity
@Table(name = "employee")
public class Employee {
    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    @Column(name = "id")
    private Integer id;
    
    @Column(name = "name")
    private String name;
    
    @Column(name="age")
    private Integer age;
    
    public Employee() {
    }
    public Employee(Integer id, String name, Integer age) {
        this.id = id;
        this.name = name;
        this.age = age;
    }
    
    public Employee(String name, int age) {
        this.name = name;
        this.age = age;
    }
    public Integer getId() {
        return id;
    }
    public void setId(Integer id) {
        this.id = id;
    }
    public String getName() {
        return name;
    }
    public void setName(String name) {
        this.name = name;
    }
    public Integer getAge() {
        return age;
    }
    public void setAge(Integer age) {
        this.age = age;
    }
    
    @Override
    public String toString() {
        return "Employee: " + this.id + ", " + this.name + ", " + this.age; 
    }
    
}
    
